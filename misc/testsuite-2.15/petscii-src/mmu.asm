           *= $0801           .BYTE $4C,$14,$08,$00,$97TURBOASS   = 780           .TEXT "780"           .BYTE $2C,$30,$3A,$9E,$32,$30           .BYTE $37,$33,$00,$00,$00           LDA #1           STA TURBOASS           JMP MAINPCONFIG    = 172;173DATA       .BYTE 0,0,0,0ABACKUP    .BYTE 0,0TABLE      .BYTE $01,$01,$01,$02           .BYTE $01,$01,$3D,$02           .BYTE $95,$01,$3D,$02           .BYTE $95,$86,$3D,$02           .BYTE $01,$01,$01,$02           .BYTE $01,$01,$00,$03           .BYTE $95,$01,$00,$03           .BYTE $95,$86,$00,$03ROM           LDA #$2F           STA 0           LDA #$37           STA 1           CLI           RTSPREPARE           JSR ROM           SEI           LDA #$02           STA $D000           LDA #$34           STA 1           LDA #$00           STA $A000           STA $E000           STA $D000           RTSCOMPARE           .BLOCK           LDA 0           STA NEW0           LDA 1           STA NEW1           INC $A000           INC $E000           INC $D000           LDA #$2F           STA 0           LDA #$30           STA 1           LDA $A000           LDY #0           CMP (PCONFIG),Y           BNE ERROR           LDA $E000           INY           CMP (PCONFIG),Y           BNE ERROR           LDA $D000           INY           CMP (PCONFIG),Y           BNE ERROR           LDA #$37           STA 1           LDA $D000           INY           CMP (PCONFIG),Y           BNE ERROR           CLI           RTSNEW0       .BYTE 0NEW1       .BYTE 0ERROR           LDA #$37           STA 1           LDA $D000           PHA           LDA #$30           STA 1           LDA $D000           PHA           LDA $E000           PHA           LDA $A000           PHA           JSR ROM           JSR PRINT           .BYTE 13           .NULL "0=0 1=0"           LDY #0PRINTCONF           LDA #32           JSR $FFD2           LDA DATA,Y           AND #$01           ORA #"0"           JSR $FFD2           LDA #"="           JSR $FFD2           LDA DATA,Y           LSR A           ORA #"0"           JSR $FFD2           INY           CPY #4           BCC PRINTCONF           JSR PRINT           .BYTE 13           .TEXT "AFTER  "           .BYTE 0           LDA NEW0           AND #$07           ORA #"0"           JSR $FFD2           LDA #32           JSR $FFD2           LDA NEW1           AND #$07           ORA #"0"           JSR $FFD2           LDA #32           JSR $FFD2           JSR $FFD2           PLA           JSR PRINTHB           LDA #32           JSR $FFD2           PLA           JSR PRINTHB           LDA #32           JSR $FFD2           PLA           JSR PRINTHB           LDA #32           JSR $FFD2           PLA           JSR PRINTHB           JSR PRINT           .BYTE 13           .TEXT "RIGHT  "           .BYTE 0           LDA ABACKUP+0           AND #$07           ORA #"0"           JSR $FFD2           LDA #32           JSR $FFD2           LDA ABACKUP+0           EOR #$FF           ORA ABACKUP+1           AND #$07           ORA #"0"           JSR $FFD2           LDA #32           JSR $FFD2           JSR $FFD2           LDY #0           LDA (PCONFIG),Y           JSR PRINTHB           LDA #32           JSR $FFD2           LDY #1           LDA (PCONFIG),Y           JSR PRINTHB           LDA #32           JSR $FFD2           LDY #2           LDA (PCONFIG),Y           JSR PRINTHB           LDA #32           JSR $FFD2           LDY #3           LDA (PCONFIG),Y           JSR PRINTHB           LDA #13           JSR $FFD2WAITKEY           JSR $FFE4           BEQ WAITKEY           CMP #$03           BEQ STOP           RTSSTOP           LDA TURBOASS           BEQ BASIC           JMP $8000BASIC           JMP $A474           .BENDMAIN           JSR PRINT           .BYTE 13           .TEXT "‘MMU"           .BYTE 0           LDA #0           STA DATA+0           STA DATA+1           STA DATA+2           STA DATA+3NEXTCONFIG           JSR PREPARE           LDY #0           STY 0           STY 1           STY ABACKUP+0           STY ABACKUP+1STORE           LDA DATA,Y           AND #1           TAX           LDA DATA,Y           STA 0,X           STA ABACKUP,X           INY           CPY #4           BCC STORE           LDA ABACKUP+0           EOR #$FF           ORA ABACKUP+1           AND #$07           ASL A           ASL A           ADC #<TABLE           STA PCONFIG+0           LDA #0           ADC #>TABLE           STA PCONFIG+1           JSR COMPARE           LDX DATA+0           INX           TXA           AND #$0F           STA DATA+0           BNE NEXTCONFIG           LDX DATA+1           INX           TXA           AND #$0F           STA DATA+1           BNE NEXTCONFIG           LDX DATA+2           INX           TXA           AND #$0F           STA DATA+2           BNE NEXTCONFIG           LDX DATA+3           INX           TXA           AND #$0F           STA DATA+3           BNE NEXTCONFIGOK           JSR PRINT           .TEXT " - OK"           .BYTE 13,0           LDA TURBOASS           BEQ LOADWAIT       JSR $FFE4           BEQ WAIT           JMP $8000LOAD           LDA #47           STA 0           JSR PRINTNAME       .TEXT "CPUPORT"NAMELEN    = *-NAME           .BYTE 0           LDA #0           STA $0A           STA $B9           LDA #NAMELEN           STA $B7           LDA #<NAME           STA $BB           LDA #>NAME           STA $BC           PLA           PLA           JMP $E16FPRINT      PLA           .BLOCK           STA PRINT0+1           PLA           STA PRINT0+2           LDX #1PRINT0     LDA !*,X           BEQ PRINT1           JSR $FFD2           INX           BNE PRINT0PRINT1     SEC           TXA           ADC PRINT0+1           STA PRINT2+1           LDA #0           ADC PRINT0+2           STA PRINT2+2PRINT2     JMP !*           .BENDPRINTHB           .BLOCK           PHA           LSR A           LSR A           LSR A           LSR A           JSR PRINTHN           PLA           AND #$0FPRINTHN           ORA #$30           CMP #$3A           BCC PRINTHN0           ADC #6PRINTHN0           JSR $FFD2           RTS           .BEND