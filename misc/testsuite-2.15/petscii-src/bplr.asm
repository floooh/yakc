         *= $0801         .BYTE $4C,$16,$08,$00,$97,$32         .BYTE $2C,$30,$3A,$9E,$32,$30         .BYTE $37,$30,$00,$00,$00,$A9         .BYTE $01,$85,$02         JSR PRINT         .BYTE 13         .TEXT "‘BPLR"         .BYTE 0         LDA #%00011011         STA DB         LDA #%11000110         STA AB         LDA #%10110001         STA XB         LDA #%01101100         STA YB         LDA #%00000000         STA PB         TSX         STX SB         LDA #0         STA DB         LDA #<BREAK         STA $0316         LDA #>BREAK         STA $0317         LDX #0         TXAFILL     STA $1082,X         STA $1182,X         INX         BNE FILLNEXT     LDA DB         STA DA         STA DR         LDA AB         STA AR         LDA XB         STA XR         LDA YB         STA YR         LDA PB         ORA #%00110000         STA PR         LDX CMD+1         LDA BRANCH         STA $1100,X         LDA DB         STA $1101,X         LDX SB         STX SR         TXS         LDA PB         PHA         LDA AB         LDX XB         LDY YB         PLPCMD      JMP $1100BREAK    PLA         STA YA         PLA         STA XA         PLA         STA AA         PLA         STA PA         PLA         STA AL+1         PLA         STA AH+1         TSX         STX SA         CLC         LDA CMD+1         LDY CMD+2         ADC #4         BCC NOINC         INYNOINC    BIT DB         BPL POS         DEYPOS      CLC         ADC DB         BCC AL         INYAL       CMP #0         BNE ERRAH       CPY #0         BEQ NOERRERR      JSR PRINT         .BYTE 13         .TEXT "WRONG JUMP ADDRESS"         .BYTE 13,0         JSR WAITNOERR    JSR CHECK         INC DB         LDA DB         CMP #$FE         BNE JMPNEXT         LDA #0         STA DB         LDX CMD+1         STA $1100,X         INC CMD+1         BEQ NONEXTJMPNEXT  JMP NEXTNONEXT         LDA #$80BRANCH   BPL BERROOKK     JSR PRINT         .TEXT " - OK"         .BYTE 13,0         LDA 2         BEQ LOADWT       JSR $FFE4         BEQ WT         JMP $8000BERR     JSR PRINT         .BYTE 13         .TEXT "NO JUMP EXPECTED"         .BYTE 13,0         JSR WAIT         JMP OOKKLOAD     JSR PRINTNAME     .TEXT "BCSR"NAMELEN  = *-NAME         .BYTE 0         LDA #0         STA $0A         STA $B9         LDA #NAMELEN         STA $B7         LDA #<NAME         STA $BB         LDA #>NAME         STA $BC         PLA         PLA         JMP $E16FDB       .BYTE 0AB       .BYTE 0XB       .BYTE 0YB       .BYTE 0PB       .BYTE 0SB       .BYTE 0DA       .BYTE 0AA       .BYTE 0XA       .BYTE 0YA       .BYTE 0PA       .BYTE 0SA       .BYTE 0DR       .BYTE 0AR       .BYTE 0XR       .BYTE 0YR       .BYTE 0PR       .BYTE 0SR       .BYTE 0CHECK    LDA DA         CMP DR         BNE ERROR         LDA AA         CMP AR         BNE ERROR         LDA XA         CMP XR         BNE ERROR         LDA YA         CMP YR         BNE ERROR         LDA PA         CMP PR         BNE ERROR         LDA SA         CMP SR         BNE ERROR         RTSERROR    JSR PRINT         .BYTE 13         .NULL "BEFORE  "         LDX #<DB         LDY #>DB         JSR SHOWREGS         JSR PRINT         .BYTE 13         .NULL "AFTER   "         LDX #<DA         LDY #>DA         JSR SHOWREGS         JSR PRINT         .BYTE 13         .NULL "RIGHT   "         LDX #<DR         LDY #>DR         JSR SHOWREGS         LDA #13         JSR $FFD2WAIT     JSR $FFE4         BEQ WAIT         CMP #3         BEQ STOP         RTSSTOP         LDA 2         BEQ BASIC         JMP $8000BASIC    JMP ($A002)SHOWREGS STX 172         STY 173         LDY #0         LDA (172),Y         JSR HEXB         LDA #32         JSR $FFD2         LDA #32         JSR $FFD2         INY         LDA (172),Y         JSR HEXB         LDA #32         JSR $FFD2         INY         LDA (172),Y         JSR HEXB         LDA #32         JSR $FFD2         INY         LDA (172),Y         JSR HEXB         LDA #32         JSR $FFD2         INY         LDA (172),Y         LDX #"N"         ASL A         BCC OK7         LDX #"Î"OK7      PHA         TXA         JSR $FFD2         PLA         LDX #"V"         ASL A         BCC OK6         LDX #"Ö"OK6      PHA         TXA         JSR $FFD2         PLA         LDX #"0"         ASL A         BCC OK5         LDX #"1"OK5      PHA         TXA         JSR $FFD2         PLA         LDX #"B"         ASL A         BCC OK4         LDX #"Â"OK4      PHA         TXA         JSR $FFD2         PLA         LDX #"D"         ASL A         BCC OK3         LDX #"Ä"OK3      PHA         TXA         JSR $FFD2         PLA         LDX #"I"         ASL A         BCC OK2         LDX #"É"OK2      PHA         TXA         JSR $FFD2         PLA         LDX #"Z"         ASL A         BCC OK1         LDX #"Ú"OK1      PHA         TXA         JSR $FFD2         PLA         LDX #"C"         ASL A         BCC OK0         LDX #"Ã"OK0      PHA         TXA         JSR $FFD2         PLA         LDA #32         JSR $FFD2         INY         LDA (172),YHEXB     PHA         LSR A         LSR A         LSR A         LSR A         JSR HEXN         PLA         AND #$0FHEXN     ORA #$30         CMP #$3A         BCC HEXN0         ADC #6HEXN0    JMP $FFD2PRINT    PLA         .BLOCK         STA PRINT0+1         PLA         STA PRINT0+2         LDX #1PRINT0   LDA !*,X         BEQ PRINT1         JSR $FFD2         INX         BNE PRINT0PRINT1   SEC         TXA         ADC PRINT0+1         STA PRINT2+1         LDA #0         ADC PRINT0+2         STA PRINT2+2PRINT2   JMP !*         .BEND